/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Gameboard, GameboardInterface } from "../Gameboard";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "width_",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "height_",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "color1_",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "color2_",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "color1",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "color2",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBoard",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "height",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "width",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100b757601f61025338819003918201601f19168301916001600160401b038311848410176100bc578084926080946040528339810103126100b757610047816100d2565b9065ffffffff000061005b602083016100d2565b61ff00610076606061006f604087016100e0565b95016100e0565b60ff69ffffffff0000000000006000549260301b1696169060018060501b031916179160081b16179160101b16171760005560405161016190816100f28239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b519060ff821682036100b757565b519063ffffffff821682036100b75756fe60806040818152600436101561001457600080fd5b600091823560e01c9081630ef267431461010b575080633264a34b146100c55780635115bdff146100a05780639ededf77146100815763ef60f12a1461005957600080fd5b3461007d578160031936011261007d5763ffffffff6020925460301c169051908152f35b5080fd5b503461007d578160031936011261007d5760ff60209254169051908152f35b503461007d578160031936011261007d5763ffffffff6020925460101c169051908152f35b503461007d578160031936011261007d57608091549080519160ff8116835260ff8160081c16602084015263ffffffff91828260101c169084015260301c166060820152f35b83903461007d578160031936011261007d5760ff6020925460081c168152f3fea26469706673582212207eef004b52250982b73efde560abe12e77ee628e7659d6d903187fa19e6d3f1964736f6c63430008100033";

type GameboardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameboardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gameboard__factory extends ContractFactory {
  constructor(...args: GameboardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    width_: PromiseOrValue<BigNumberish>,
    height_: PromiseOrValue<BigNumberish>,
    color1_: PromiseOrValue<BigNumberish>,
    color2_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Gameboard> {
    return super.deploy(
      width_,
      height_,
      color1_,
      color2_,
      overrides || {}
    ) as Promise<Gameboard>;
  }
  override getDeployTransaction(
    width_: PromiseOrValue<BigNumberish>,
    height_: PromiseOrValue<BigNumberish>,
    color1_: PromiseOrValue<BigNumberish>,
    color2_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      width_,
      height_,
      color1_,
      color2_,
      overrides || {}
    );
  }
  override attach(address: string): Gameboard {
    return super.attach(address) as Gameboard;
  }
  override connect(signer: Signer): Gameboard__factory {
    return super.connect(signer) as Gameboard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameboardInterface {
    return new utils.Interface(_abi) as GameboardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Gameboard {
    return new Contract(address, _abi, signerOrProvider) as Gameboard;
  }
}

using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace Gameboard.Gameboard.ContractDefinition
{


    public partial class GameboardDeployment : GameboardDeploymentBase
    {
        public GameboardDeployment() : base(BYTECODE) { }
        public GameboardDeployment(string byteCode) : base(byteCode) { }
    }

    public class GameboardDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "0x60406080815234620003c2576200119d803803806200001e8162000454565b928339810190602081830312620003c25780516001600160401b0391828211620003c2570160c081840312620003c2576200005a60c062000454565b908051838111620003c25781019284601f85011215620003c2578351936200008c62000086866200047a565b62000454565b9560208787815201926020849760051b84010192828411620003c25760208101945b848610620003c757505050505050838252620000cd6020820162000492565b60208301908152620000e186830162000492565b8387019081526060830151949091906001600160a01b0386168603620003c2576060850195865260a06080850151946080870195865201519660a08601978852519068010000000000000000821162000312576000548260005580831062000381575b506000808052906000805160206200117d833981519152905b83831062000328575050505063ffffffff9051169360019467ffffffff000000008654935160201b169168010000000000000000600160e01b039051891b169263ffffffff60e01b1617171783555192836002555160035551620001c2608062000454565b9181835260208301916000835260608685019442865201948552805190680100000000000000008211620003125760045482600455808310620002bd575b50602001600460005260206000206000915b838310620002645750505050505160038110156200024e5760ff801960055416911617600555516006555160075551610c8c9081620004f18239f35b634e487b7160e01b600052602160045260246000fd5b8481516020815191620002788387620004a4565b01846000526020600020906000905b838210620002a45750505050602081920192019201919062000212565b8051518355899492830192919091019060200162000287565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90810190849084015b828110620002fc57505062000200565b62000309600082620004a4565b018490620002ec565b634e487b7160e01b600052604160045260246000fd5b805160208151916200033b8386620004a4565b01836000526020600020906000905b838210620003695750505050600160208192019201920191906200015d565b6001602082829351518655019301910190916200034a565b600080526000805160206200117d8339815191529081019083015b818110620003ab575062000144565b80620003bb6000600193620004a4565b016200039c565b600080fd5b8551838111620003c257820184603f82011215620003c2576020810151620003f362000086826200047a565b918d602084848152019260051b82010190878211620003c2578e01915b8183106200042a57505050815260209586019501620000ae565b602083890312620003c25760208091620004448262000454565b8551815281520192019162000410565b6040519190601f01601f191682016001600160401b038111838210176200031257604052565b6001600160401b038111620003125760051b60200190565b519063ffffffff82168203620003c257565b6801000000000000000082116200031257805491808255828110620004c857505050565b60009182526020822092830192015b828110620004e457505050565b818155600101620004d756fe60808060405260048036101561001457600080fd5b60009182803560e01c9182633264a34b1461070957505080635708e09f1461066b5780636898f82b14610484578063842b4ba51461033257806388591583146102f95780638a8c2bf5146102a557806392a8a0df146100d957639ae1579e1461007c57600080fd5b346100d55760603660031901126100d55760203660431901126100d5576100b16100a7823583610c28565b5060243590610c28565b9190916100c357506044359055604051f35b634e487b7160e01b8352829052602482fd5b5080fd5b50346100d5576020906003199082823601126102a15780359167ffffffffffffffff831161029d5760c083830191843603011261029d578061011a91610b99565b91600160401b831161028a5750845482865580831061023f575b50808580527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639086925b8484106101eb5787878763ffffffff61017960248301610c17565b169167ffffffff000000006001549161019460448501610c17565b901b1660648301359360018060a01b03851685036101e75768010000000000000000600160e01b03604095861b166001600160e01b031993909316171717600155608481013560025560a4013560035551f35b8580fd5b806101f7889284610b99565b906102028287610bd4565b858b52838b20908b905b838210610228575050505060019182910193019301929161015e565b803583558b9560019384019392909201910161020c565b858052827f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56391820191015b8181106102775750610134565b8061028488600193610bd4565b0161026a565b634e487b7160e01b865260419052602485fd5b8480fd5b8380fd5b82346102f657806003193601126102f65760a0600154600254600354906040519263ffffffff80821685528160201c166020850152600180861b039060401c16604084015260608301526080820152f35b80fd5b82346102f657806003193601126102f657606060ff6005541660065460075490610326604051809461094d565b60208301526040820152f35b5090346102f6576020806003193601126100d55782359267ffffffffffffffff918285116102a157366023860112156102a157848201359283116102a1576024850194602436918560051b0101116102a157600160401b8311610471578154838355808410610426575b50849184527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b84925b8484106103d25785604051f35b806103de849289610b99565b906103e98286610bd4565b8489528389209089905b83821061040f57505050506001918291019201930192906103c5565b8035835587956001938401939290920191016103f3565b828552837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b91820191015b81811061045e575061039c565b8061046b87600193610bd4565b01610451565b634e487b7160e01b845260418252602484fd5b50346100d55760208060031936011261066757813560035481106106565760ff60055416600381101561064357600181146106325760021461062157610592906104d060016005610970565b6104dc81600754610988565b60075560018060a01b0360015460401c16858060405193868501906323b872dd60e01b82523360248701523060448701526064860152606485526105216084866109ab565b61052a876109e3565b9461053860405196876109ab565b8786527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656488870152519082855af13d15610619573d91610577836109e3565b9261058560405194856109ab565b83523d888785013e6109ff565b8051806105a0575b84604051f35b818391810103126102a1578101518015908115036102a1576105c357808061059a565b60405162461bcd60e51b815291820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260849150fd5b6060916109ff565b60405163c5a977b160e01b81528390fd5b60405163ba26162b60e01b81528490fd5b634e487b7160e01b855260218452602485fd5b6040516347d8345560e11b81528390fd5b8280fd5b50346100d55760203660031901126100d55780359060035482106106fa5760ff6005541660038110156106e757600181146106d7576002146106c857506106c0906106b860016005610970565b600754610988565b600755604051f35b60405163c5a977b160e01b8152fd5b5060405163ba26162b60e01b8152fd5b634e487b7160e01b845260218252602484fd5b6040516347d8345560e11b8152fd5b909150346100d557816003193601126100d5578061072a60c060a0936109ab565b6060815282602082015282604082015282606082015282608082015201528160606040516107596080826109ab565b81815282602082015282604082015201526040519061077960c0836109ab565b61078283610aeb565b825260015463ffffffff8116602084015263ffffffff8160201c16604084015260018060a01b039060401c166060830152600254608083015260035460a0830152604051926107d26080856109ab565b6107db82610aeb565b845260ff600554169160038310156108ad5750506020830152600654604083015260075460608301526040519182916040835260a0610827825160c060408701526101008601906108c0565b9163ffffffff602082015116606086015263ffffffff6040820151166080860152600180831b0360608201511682860152608081015160c0860152015160e0840152828103602084015260608061088784516080855260808501906108c0565b9361089a6020820151602086019061094d565b6040810151604085015201519101520390f35b634e487b7160e01b825260219052602490fd5b908082519081815260208091019281808460051b830101950193600080925b8584106108f0575050505050505090565b9091929380959697601f1983820301855288519082808351928381520192019085905b8082106109335750505090806001929901940194019295949391906108df565b919380600192948651518152019401920188939291610913565b90600382101561095a5752565b634e487b7160e01b600052602160045260246000fd5b90600381101561095a5760ff80198354169116179055565b9190820180921161099557565b634e487b7160e01b600052601160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176109cd57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116109cd57601f01601f191660200190565b91929015610a615750815115610a13575090565b3b15610a1c5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610a745750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510610aba575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350610a97565b67ffffffffffffffff81116109cd5760051b60200190565b90815491610af883610ad3565b926040610b07815195866109ab565b8185526000928352602080842084928288015b858510610b2a5750505050505050565b838354610b3681610ad3565b90610b43855192836109ab565b808252858a52828a208a8484015b838210610b705750505090835250600195860195939093019201610b1a565b6001919293949582918951610b8583826109ab565b865481528152019301910188949392610b51565b903590601e1981360301821215610bcf570180359067ffffffffffffffff8211610bcf57602001918160051b36038313610bcf57565b600080fd5b600160401b82116109cd57805491808255828110610bf157505050565b60009182526020822092830192015b828110610c0c57505050565b818155600101610c00565b3563ffffffff81168103610bcf5790565b8054821015610c405760005260206000200190600090565b634e487b7160e01b600052603260045260246000fdfea26469706673582212209a02890385f43690264374b792fb1556d89bf274d85ffcf8bdd96d4d066f29ca64736f6c63430008100033290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563";
        public GameboardDeploymentBase() : base(BYTECODE) { }
        public GameboardDeploymentBase(string byteCode) : base(byteCode) { }
        [Parameter("tuple", "gameboardParams_", 1)]
        public virtual GameboardParams Gameboardparams { get; set; }
    }

    public partial class GameboardDataFunction : GameboardDataFunctionBase { }

    [Function("gameboardData", typeof(GameboardDataOutputDTO))]
    public class GameboardDataFunctionBase : FunctionMessage
    {

    }

    public partial class GameboardParamsFunction : GameboardParamsFunctionBase { }

    [Function("gameboardParams", typeof(GameboardParamsOutputDTO))]
    public class GameboardParamsFunctionBase : FunctionMessage
    {

    }

    public partial class GetBoardFunction : GetBoardFunctionBase { }

    [Function("getBoard", typeof(GetBoardOutputDTO))]
    public class GetBoardFunctionBase : FunctionMessage
    {

    }

    public partial class PlayFunction : PlayFunctionBase { }

    [Function("play")]
    public class PlayFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "bet_", 1)]
        public virtual BigInteger Bet { get; set; }
    }

    public partial class PlayFreeFunction : PlayFreeFunctionBase { }

    [Function("playFree")]
    public class PlayFreeFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "bet_", 1)]
        public virtual BigInteger Bet { get; set; }
    }

    public partial class SetAllGridsFunction : SetAllGridsFunctionBase { }

    [Function("setAllGrids")]
    public class SetAllGridsFunctionBase : FunctionMessage
    {
        [Parameter("tuple[][]", "gridData_", 1)]
        public virtual List<List<GridData>> Griddata { get; set; }
    }

    public partial class SetBoardFunction : SetBoardFunctionBase { }

    [Function("setBoard")]
    public class SetBoardFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "gameboardParams_", 1)]
        public virtual GameboardParams Gameboardparams { get; set; }
    }

    public partial class SetGridFunction : SetGridFunctionBase { }

    [Function("setGrid")]
    public class SetGridFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "x", 1)]
        public virtual BigInteger X { get; set; }
        [Parameter("uint256", "y", 2)]
        public virtual BigInteger Y { get; set; }
        [Parameter("tuple", "gridData_", 3)]
        public virtual GridData Griddata { get; set; }
    }







    public partial class GameboardDataOutputDTO : GameboardDataOutputDTOBase { }

    [FunctionOutput]
    public class GameboardDataOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "gameStatus", 1)]
        public virtual byte GameStatus { get; set; }
        [Parameter("uint256", "creationDate", 2)]
        public virtual BigInteger CreationDate { get; set; }
        [Parameter("uint256", "totalPool", 3)]
        public virtual BigInteger TotalPool { get; set; }
    }

    public partial class GameboardParamsOutputDTO : GameboardParamsOutputDTOBase { }

    [FunctionOutput]
    public class GameboardParamsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint32", "color1", 1)]
        public virtual uint Color1 { get; set; }
        [Parameter("uint32", "color2", 2)]
        public virtual uint Color2 { get; set; }
        [Parameter("address", "token", 3)]
        public virtual string Token { get; set; }
        [Parameter("uint256", "initialPool", 4)]
        public virtual BigInteger InitialPool { get; set; }
        [Parameter("uint256", "bet", 5)]
        public virtual BigInteger Bet { get; set; }
    }

    public partial class GetBoardOutputDTO : GetBoardOutputDTOBase { }

    [FunctionOutput]
    public class GetBoardOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple", "", 1)]
        public virtual GameboardParams ReturnValue1 { get; set; }
        [Parameter("tuple", "", 2)]
        public virtual GameboardData ReturnValue2 { get; set; }
    }










}

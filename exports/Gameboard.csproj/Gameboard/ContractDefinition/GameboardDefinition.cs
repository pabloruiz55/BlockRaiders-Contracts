using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace Gameboard.Gameboard.ContractDefinition
{


    public partial class GameboardDeployment : GameboardDeploymentBase
    {
        public GameboardDeployment() : base(BYTECODE) { }
        public GameboardDeployment(string byteCode) : base(byteCode) { }
    }

    public class GameboardDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "0x60806040523461012957610aba60e0813803918261001c8161012e565b9384928339810103126101295761003360e061012e565b61003c82610169565b80825261004b60208401610169565b9182602082015261005e60408501610177565b9081604082015261007160608601610177565b6060820181905260808601519092906001600160a01b03811681036101295760c09561ff00828565ffffffff000094608069ffffffff0000000000009801528960a08c01519b8c60a08401520151998a91015260ff600054916a0100000000000000000000600160f01b039060501b1698169061ffff60f01b16179160081b16179160101b16179160301b1617176000558160015560025560ff1960a3541660a3554260a45560a55560405161093190816101898239f35b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761015357604052565b634e487b7160e01b600052604160045260246000fd5b519060ff8216820361012957565b519063ffffffff821682036101295756fe608080604052600436101561001357600080fd5b60003560e01c9081633264a34b146104d5575080635708e09f1461047d5780636807da35146104175780636898f82b1461023557806388591583146101fc5780638a8c2bf5146101925780639ae1579e146101375763bc545c311461007757600080fd5b346101325760e03660031901126101325760043560ff8116809103610132576000549060243560ff811681036101325760443563ffffffff92838216820361013257606435938416840361013257608435926001600160a01b03841684036101325761ff0065ffffffff00009269ffffffff00000000000095600160501b600160f01b039060501b169761ffff60f01b16179160081b16179160101b16179160301b16171760005560a43560015560c4356002556000604051f35b600080fd5b3461013257606036600319011261013257600435602435602036604319011261013257601082101561017c57600a81101561017c57604435600a929092020160030155005b634e487b7160e01b600052603260045260246000fd5b346101325760003660031901126101325760e0600054600154600254906040519260ff8116845260ff8160081c16602085015263ffffffff808260101c1660408601528160301c16606085015260018060a01b039060501c16608084015260a083015260c0820152f35b3461013257600036600319011261013257606060ff60a3541660a45460a55490610229604051809461078b565b60208301526040820152f35b34610132576020806003193601126101325760043560025481106104055760ff60a3541660038110156103ef57600181146103dd576002146103cb5761034590610281600160a3610798565b61028d8160a5546107b0565b60a55560018060a01b0360005460501c1660008060405193868501906323b872dd60e01b82523360248701523060448701526064860152606485526102d36084866107d3565b6102dc8761080b565b946102ea60405196876107d3565b8786527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656488870152519082855af13d156103c3573d916103298361080b565b9261033760405194856107d3565b83523d60008785013e610827565b80518061034e57005b81839181010312610132578101518015908115036101325761036c57005b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b606091610827565b60405163c5a977b160e01b8152600490fd5b60405163ba26162b60e01b8152600490fd5b634e487b7160e01b600052602160045260246000fd5b6040516347d8345560e11b8152600490fd5b3461013257611400366003190112610132573661140411610132576003600060045b6010821061044357005b826000825b600a821061046757505050600a61014060019201930191019091610439565b8035835560019283019290910190602001610448565b346101325760203660031901126101325760043560025481106104055760ff60a3541660038110156103ef57600181146103dd576002146103cb576104d0906104c8600160a3610798565b60a5546107b0565b60a555005b346101325760003660031901126101325760c0816104f660e06000946107d3565b8281528260208201528260408201528260608201528260808201528260a082015201526040516105276080826107d3565b604051906102009161053983826107d3565b60005b83811061074557508160609160009352826020820152826040820152015260405161056860e0826107d3565b60005460ff8116825260ff8160081c16602083015263ffffffff8160101c16604083015263ffffffff8160301c16606083015260018060a01b039060501c16608082015260015460a082015260025460c0820152604051916105cb6080846107d3565b6105d860405191826107d3565b60036000825b601082106106eb57505050825260ff60a3541660038110156103ef57602083015260a454604083015260a554606083015260c06040519160ff815116835260ff602082015116602084015263ffffffff604082015116604084015263ffffffff606082015116606084015260018060a01b03608082015116608084015260a081015160a0840152015160c082015260e081018251906000905b601082106106ae576115408460608761069960208201516114e085019061078b565b60408101516115008401520151611520820152f35b8251600090825b600a83106106d457505050602061014060019201930191019091610677565b6020806001928451518152019201920191906106b5565b6040516106fa610140826107d3565b600084825b600a831061072057505050602082600a9260019452019301910190916105de565b60016020819260405161073383826107d3565b855481528152019201920191906106ff565b60405161014061075581836107d3565b60005b81811061076d5750508282015260200161053c565b60209060405161077d83826107d3565b600081528185015201610758565b9060038210156103ef5752565b9060038110156103ef5760ff80198354169116179055565b919082018092116107bd57565b634e487b7160e01b600052601160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176107f557604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116107f557601f01601f191660200190565b91929015610889575081511561083b575090565b3b156108445790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561089c5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b8285106108e2575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506108bf56fea2646970667358221220d5c126aa1ee0ae621b37a9f61f2e6b7ea8ff956b2a6ebc061b01a7ed4094f7e364736f6c63430008100033";
        public GameboardDeploymentBase() : base(BYTECODE) { }
        public GameboardDeploymentBase(string byteCode) : base(byteCode) { }
        [Parameter("tuple", "gameboardParams_", 1)]
        public virtual GameboardParams Gameboardparams { get; set; }
    }

    public partial class GameboardDataFunction : GameboardDataFunctionBase { }

    [Function("gameboardData", typeof(GameboardDataOutputDTO))]
    public class GameboardDataFunctionBase : FunctionMessage
    {

    }

    public partial class GameboardParamsFunction : GameboardParamsFunctionBase { }

    [Function("gameboardParams", typeof(GameboardParamsOutputDTO))]
    public class GameboardParamsFunctionBase : FunctionMessage
    {

    }

    public partial class GetBoardFunction : GetBoardFunctionBase { }

    [Function("getBoard", typeof(GetBoardOutputDTO))]
    public class GetBoardFunctionBase : FunctionMessage
    {

    }

    public partial class PlayFunction : PlayFunctionBase { }

    [Function("play")]
    public class PlayFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "bet_", 1)]
        public virtual BigInteger Bet { get; set; }
    }

    public partial class PlayFreeFunction : PlayFreeFunctionBase { }

    [Function("playFree")]
    public class PlayFreeFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "bet_", 1)]
        public virtual BigInteger Bet { get; set; }
    }

    public partial class SetAllGridsFunction : SetAllGridsFunctionBase { }

    [Function("setAllGrids")]
    public class SetAllGridsFunctionBase : FunctionMessage
    {
        [Parameter("tuple[10][16]", "gridData_", 1)]
        public virtual List<List<GridData>> Griddata { get; set; }
    }

    public partial class SetBoardFunction : SetBoardFunctionBase { }

    [Function("setBoard")]
    public class SetBoardFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "gameboardParams_", 1)]
        public virtual GameboardParams Gameboardparams { get; set; }
    }

    public partial class SetGridFunction : SetGridFunctionBase { }

    [Function("setGrid")]
    public class SetGridFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "x", 1)]
        public virtual BigInteger X { get; set; }
        [Parameter("uint256", "y", 2)]
        public virtual BigInteger Y { get; set; }
        [Parameter("tuple", "gridData_", 3)]
        public virtual GridData Griddata { get; set; }
    }







    public partial class GameboardDataOutputDTO : GameboardDataOutputDTOBase { }

    [FunctionOutput]
    public class GameboardDataOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "gameStatus", 1)]
        public virtual byte GameStatus { get; set; }
        [Parameter("uint256", "creationDate", 2)]
        public virtual BigInteger CreationDate { get; set; }
        [Parameter("uint256", "totalPool", 3)]
        public virtual BigInteger TotalPool { get; set; }
    }

    public partial class GameboardParamsOutputDTO : GameboardParamsOutputDTOBase { }

    [FunctionOutput]
    public class GameboardParamsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "width", 1)]
        public virtual byte Width { get; set; }
        [Parameter("uint8", "height", 2)]
        public virtual byte Height { get; set; }
        [Parameter("uint32", "color1", 3)]
        public virtual uint Color1 { get; set; }
        [Parameter("uint32", "color2", 4)]
        public virtual uint Color2 { get; set; }
        [Parameter("address", "token", 5)]
        public virtual string Token { get; set; }
        [Parameter("uint256", "initialPool", 6)]
        public virtual BigInteger InitialPool { get; set; }
        [Parameter("uint256", "bet", 7)]
        public virtual BigInteger Bet { get; set; }
    }

    public partial class GetBoardOutputDTO : GetBoardOutputDTOBase { }

    [FunctionOutput]
    public class GetBoardOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple", "", 1)]
        public virtual GameboardParams ReturnValue1 { get; set; }
        [Parameter("tuple", "", 2)]
        public virtual GameboardData ReturnValue2 { get; set; }
    }










}
